services:

  webapp:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DB_URL: $DB_URL
        DB_PASS: $DB_PASS
        DB_NAME: $DB_NAME
        NEXTAUTH_URL: $NEXTAUTH_URL
        GOOGLE_CLIENT_ID: $GOOGLE_CLIENT_ID
        GOOGLE_CLIENT_SECRET: $GOOGLE_CLIENT_SECRET
        NODE_ENV: $NODE_ENV
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Runtime environment variables
      NODE_ENV: $NODE_ENV
      DB_URL: $DB_URL
      DB_PASS: $DB_PASS
      NEXTAUTH_URL: $NEXTAUTH_URL
      NEXTAUTH_SECRET: $NEXTAUTH_SECRET
      GOOGLE_CLIENT_ID: $GOOGLE_CLIENT_ID
      GOOGLE_CLIENT_SECRET: $GOOGLE_CLIENT_SECRET
    env_file: ".env"
    volumes:
      - .:/app
      - /app/node_modules
    command: sh -c "npx prisma generate && npx prisma migrate reset --force && npm run dev"

  # The only required environment variable is POSTGRES_PASSWORD.
  # If POSTGRES_DB is not specified, it will default to the value of POSTGRES_USER.
  # If POSTGRES_USER is not specified, it will default to postgres.

  db:
    image: mysql
    restart: always
    env_file: ".env"
    environment:
      MYSQL_ROOT_PASSWORD: $DB_PASS
      MYSQL_DATABASE: $DB_NAME
      DB_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASS
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost" ]
      interval: 1s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"


volumes:
  mysql_data:
